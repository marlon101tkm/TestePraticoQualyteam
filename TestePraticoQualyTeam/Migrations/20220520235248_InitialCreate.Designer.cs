// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestePraticoQualyTeam.Data;

namespace TestePraticoQualyTeam.Migrations
{
    [DbContext(typeof(TestePraticoQualyTeamContext))]
    [Migration("20220520235248_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.16");

            modelBuilder.Entity("CategoriaProcesso", b =>
                {
                    b.Property<int>("categoriasid")
                        .HasColumnType("int");

                    b.Property<int>("processosid")
                        .HasColumnType("int");

                    b.HasKey("categoriasid", "processosid");

                    b.HasIndex("processosid");

                    b.ToTable("ProcessosCategorias");
                });

            modelBuilder.Entity("TestePraticoQualyTeam.Model.Categoria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("TestePraticoQualyTeam.Model.Documento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte[]>("arquivo")
                        .HasColumnType("longblob");

                    b.Property<int>("categoriaID")
                        .HasColumnType("int");

                    b.Property<int>("codigo")
                        .HasColumnType("int");

                    b.Property<string>("nomeArquivo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("processoID")
                        .HasColumnType("int");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.HasIndex("categoriaID");

                    b.HasIndex("codigo")
                        .IsUnique();

                    b.HasIndex("processoID");

                    b.ToTable("Documento");
                });

            modelBuilder.Entity("TestePraticoQualyTeam.Model.Processo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("Processo");
                });

            modelBuilder.Entity("CategoriaProcesso", b =>
                {
                    b.HasOne("TestePraticoQualyTeam.Model.Categoria", null)
                        .WithMany()
                        .HasForeignKey("categoriasid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestePraticoQualyTeam.Model.Processo", null)
                        .WithMany()
                        .HasForeignKey("processosid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TestePraticoQualyTeam.Model.Documento", b =>
                {
                    b.HasOne("TestePraticoQualyTeam.Model.Categoria", "categoria")
                        .WithMany()
                        .HasForeignKey("categoriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestePraticoQualyTeam.Model.Processo", "processo")
                        .WithMany()
                        .HasForeignKey("processoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");

                    b.Navigation("processo");
                });
#pragma warning restore 612, 618
        }
    }
}
